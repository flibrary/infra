name: "Build customized NixOS LiveCD ISO"
on:
  push:
  schedule:
    - cron: '0 1 * * 1'
jobs:
  buildiso:
    if: (startsWith(github.event.head_commit.message, 'buildiso:') || (github.event_name == 'schedule'))
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d_%H%M')"
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Nix Flakes doesn't work on shallow clones
        fetch-depth: 0
    - name: Install nixFlake
      uses: cachix/install-nix-action@v16
    - uses: cachix/cachix-action@v8
      with:
        name: flibrary
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Update flake.lock, show drv, and calculate the hashes
      id: update
      run: |
        nix flake update
        nix show-derivation ".#img" > img.drv
        cat ./flake.lock
        cat ./img.drv
        echo "::set-output name=flake::$(sha512sum ./flake.lock|cut -d " " -f 1)"
        echo "::set-output name=img-drv::$(sha512sum ./img.drv|cut -d " " -f 1)"
    - name: Cache flake.lock
      id: cache-flake
      uses: actions/cache@v2
      with:
        path: ./img.drv
        key: ${{ runner.os }}-nix-${{ steps.update.outputs.img-drv }}
    - name: Build LiveCD ISO image
      id: iso
      if: steps.cache-flake.outputs.cache-hit != 'true'
      run: |
        nix build ".#img"
        cp "result/iso/$(ls "$(readlink result)/iso/")" ./img.iso
        echo "::set-output name=img-iso::$(sha512sum ./img.iso|cut -d " " -f 1)"
    - name: Create Release
      id: create_release
      if: steps.cache-flake.outputs.cache-hit != 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{steps.date.outputs.date}}
        release_name: ${{ steps.date.outputs.date }}
        body: |
          This is an automated LiveCD build built on ${{ steps.date.outputs.date }}.
          The SHA-512 checksum of the image is ${{ steps.iso.outputs.img-iso }}.
          See [homepage](https://github.com/LEXUGE/nixos) for more information.
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      if: steps.cache-flake.outputs.cache-hit != 'true'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./img.iso
        asset_name: img-${{ steps.date.outputs.date }}.iso
        asset_content_type: application/x-iso9660-image
    - name: Clean-up releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
